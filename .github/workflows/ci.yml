name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql-5.7:
        image: mysql:5.7
        ports:
          - '3306:3306'
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing
          MYSQL_ROOT_PASSWORD: testing
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5

      mysql-8.0:
        image: mysql:8.0
        ports:
          - '3307:3306'
        env:
          MYSQL_DATABASE: testing
          MYSQL_USER: testing
          MYSQL_PASSWORD: testing
          MYSQL_ROOT_PASSWORD: testing
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5

      postgres:
        image: postgres:13.3
        ports:
          - '5432:5432'
        env:
          POSTGRES_DB: testing
          POSTGRES_USER: testing
          POSTGRES_PASSWORD: testing
        options: >-
          --health-cmd=pg_isready
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5

      sqlsrv:
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
          - '1433:1433'
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password!
        options: >-
          --name sqlsrv
          --health-cmd "echo quit | /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -l 1 -U sa -P Password!"

    strategy:
      matrix:
        php: ['8.0', 8.1, 8.2]
        lib:
#          - { laravel: ^11.0 }
          - { laravel: ^10.0 }
          - { laravel: ^9.0 }
        flags: [--prefer-lowest, '']
        db: [mysql-5.7, mysql-8.0, pgsql, sqlite, sqlsrv]
        exclude:
          - { php: 8.0, lib: { laravel: ^10.0 } }
#          - { php: 8.0, lib: { laravel: ^11.0 } }
          - { php: 8.1, flags: --prefer-lowest } # Error about #[\ReturnTypeWillChange]
#          - { php: 8.1, lib: { laravel: ^11.0 } }

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Set up SQLServer
        if: matrix.db == 'sqlsrv'
        run: |
          docker exec sqlsrv \
            /opt/mssql-tools/bin/sqlcmd \
              -S 127.0.0.1 \
              -U sa \
              -P Password! \
              -Q "create database [testing]"

      - name: Adjust Package Versions
        run: |
          composer require "laravel/framework:${{ matrix.lib.laravel }}" --dev --no-update ${{ matrix.flags }}
          composer update ${{ matrix.flags }}

      - name: Show Important Package Versions
        id: package-versions
        run: |
          composer show | grep -E '(^awobaz/compoships)|(^staudenmeir/eloquent-eager-limit)|(^laravel/framework)|(^orchestra/testbench)|(^phpunit/phpunit)'
          echo 'name=compoships::'$(composer show | grep -E '^(awobaz/compoships)' | awk '{print $2}') > "$GITHUB_OUTPUT"
          echo 'name=eloquent-eager-limit::'$(composer show | grep -E '^(staudenmeir/eloquent-eager-limit)' | awk '{print $2}') > "$GITHUB_OUTPUT"
          echo 'name=laravel::'$(composer show | grep -E '^(laravel/framework)' | awk '{print $2}') > "$GITHUB_OUTPUT"

      - name: Prepare Database Config
        run: mv tests/config/database.github.php tests/config/database.php

      - name: Prepare Coverage Directory
        run: mkdir -p build/logs

      - name: Test
        run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml
        env:
          DB: ${{ matrix.db }}

      - name: Upload Coverage
        uses: nick-invision/retry@v2
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: 'true'
          COVERALLS_FLAG_NAME: 'db:${{ matrix.db }} laravel:${{ steps.package-versions.outputs.laravel }} compoships:${{ steps.package-versions.outputs.compoships }} eloquent-eager-limit:${{ steps.package-versions.outputs.eloquent-eager-limit }}'
        with:
          timeout_minutes: 1
          max_attempts: 3
          command: |
            composer global require php-coveralls/php-coveralls
            php-coveralls --coverage_clover=build/logs/clover.xml -v

  coverage-aggregation:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Aggregate Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
